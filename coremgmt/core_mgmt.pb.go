// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: core_mgmt.proto

package coremgmt

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	libresp "github.com/pku-hit/libresp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RoleForAccountRequest struct {
	//@inject_tag:validate:"required"
	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty" validate:"required"`
	//@inject_tag:validate:"required"
	RoleIds []string `protobuf:"bytes,2,rep,name=roleIds,proto3" json:"roleIds,omitempty" validate:"required"`
	//@inject_tag:validate:"required"
	CreatedBy            string   `protobuf:"bytes,3,opt,name=createdBy,proto3" json:"createdBy,omitempty" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleForAccountRequest) Reset()         { *m = RoleForAccountRequest{} }
func (m *RoleForAccountRequest) String() string { return proto.CompactTextString(m) }
func (*RoleForAccountRequest) ProtoMessage()    {}
func (*RoleForAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5db8af8786ce87e1, []int{0}
}
func (m *RoleForAccountRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoleForAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoleForAccountRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoleForAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleForAccountRequest.Merge(m, src)
}
func (m *RoleForAccountRequest) XXX_Size() int {
	return m.Size()
}
func (m *RoleForAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleForAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoleForAccountRequest proto.InternalMessageInfo

func (m *RoleForAccountRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *RoleForAccountRequest) GetRoleIds() []string {
	if m != nil {
		return m.RoleIds
	}
	return nil
}

func (m *RoleForAccountRequest) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

type BizElementForRoleRequest struct {
	//@inject_tag:validate:"required"
	RoleId string `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId,omitempty" validate:"required"`
	// BizElement类型，单个Element还是Element组（ITEM/GROUP）
	//@inject_tag:validate:"required"
	Type             string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty" validate:"required"`
	BizElementIds    []string `protobuf:"bytes,3,rep,name=bizElementIds,proto3" json:"bizElementIds,omitempty"`
	BizElementGrpIds []string `protobuf:"bytes,4,rep,name=bizElementGrpIds,proto3" json:"bizElementGrpIds,omitempty"`
	//@inject_tag:validate:"required"
	CreatedBy            string   `protobuf:"bytes,5,opt,name=createdBy,proto3" json:"createdBy,omitempty" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BizElementForRoleRequest) Reset()         { *m = BizElementForRoleRequest{} }
func (m *BizElementForRoleRequest) String() string { return proto.CompactTextString(m) }
func (*BizElementForRoleRequest) ProtoMessage()    {}
func (*BizElementForRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5db8af8786ce87e1, []int{1}
}
func (m *BizElementForRoleRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BizElementForRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BizElementForRoleRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BizElementForRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BizElementForRoleRequest.Merge(m, src)
}
func (m *BizElementForRoleRequest) XXX_Size() int {
	return m.Size()
}
func (m *BizElementForRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BizElementForRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BizElementForRoleRequest proto.InternalMessageInfo

func (m *BizElementForRoleRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *BizElementForRoleRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *BizElementForRoleRequest) GetBizElementIds() []string {
	if m != nil {
		return m.BizElementIds
	}
	return nil
}

func (m *BizElementForRoleRequest) GetBizElementGrpIds() []string {
	if m != nil {
		return m.BizElementGrpIds
	}
	return nil
}

func (m *BizElementForRoleRequest) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

func init() {
	proto.RegisterType((*RoleForAccountRequest)(nil), "coremgmt.RoleForAccountRequest")
	proto.RegisterType((*BizElementForRoleRequest)(nil), "coremgmt.BizElementForRoleRequest")
}

func init() { proto.RegisterFile("core_mgmt.proto", fileDescriptor_5db8af8786ce87e1) }

var fileDescriptor_5db8af8786ce87e1 = []byte{
	// 341 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x41, 0x4e, 0xc2, 0x40,
	0x14, 0x86, 0x29, 0x20, 0xc2, 0x4b, 0x8c, 0x3a, 0x11, 0x53, 0x09, 0xa9, 0xa4, 0x71, 0x41, 0x4c,
	0xac, 0x89, 0x2e, 0x5d, 0x81, 0x11, 0x82, 0x09, 0x9b, 0xba, 0x31, 0x6e, 0x08, 0x74, 0x5e, 0x08,
	0x49, 0xdb, 0x57, 0xa7, 0xc3, 0x02, 0x4f, 0xe0, 0x11, 0x3c, 0x89, 0x67, 0x70, 0xe9, 0x11, 0x0c,
	0x5e, 0xc4, 0xcc, 0xb4, 0x85, 0x54, 0x64, 0xe7, 0xae, 0xff, 0xd7, 0x37, 0xff, 0xfb, 0xf3, 0xcf,
	0xc0, 0xbe, 0x47, 0x02, 0x47, 0xc1, 0x34, 0x90, 0x4e, 0x24, 0x48, 0x12, 0xab, 0x2a, 0xa0, 0x74,
	0xa3, 0xe5, 0xcf, 0x26, 0x02, 0xe3, 0x68, 0xa4, 0x7f, 0x5c, 0x06, 0xf1, 0xf4, 0x42, 0x49, 0x0a,
	0x63, 0x4c, 0x66, 0xed, 0x00, 0xea, 0x2e, 0xf9, 0xd8, 0x23, 0xd1, 0xf1, 0x3c, 0x9a, 0x87, 0xd2,
	0xc5, 0xe7, 0x39, 0xc6, 0x92, 0x35, 0xa1, 0x36, 0x4e, 0xc8, 0x80, 0x9b, 0x46, 0xcb, 0x68, 0xd7,
	0xdc, 0x35, 0x60, 0x26, 0xec, 0x0a, 0xf2, 0x71, 0xc0, 0x63, 0xb3, 0xd8, 0x2a, 0xb5, 0x6b, 0x6e,
	0x26, 0xd5, 0x39, 0x4f, 0xe0, 0x58, 0x22, 0xef, 0x2e, 0xcc, 0x52, 0x72, 0x6e, 0x05, 0xec, 0x77,
	0x03, 0xcc, 0xee, 0xec, 0xe5, 0xce, 0xc7, 0x00, 0x43, 0xd9, 0x23, 0xa1, 0x96, 0x67, 0x2b, 0x8f,
	0xa1, 0x92, 0xb8, 0xa4, 0xfb, 0x52, 0xc5, 0x18, 0x94, 0xe5, 0x22, 0x42, 0xb3, 0xa8, 0xa9, 0xfe,
	0x66, 0x67, 0xb0, 0x37, 0x59, 0xf9, 0xa8, 0x18, 0x25, 0x1d, 0x23, 0x0f, 0xd9, 0x39, 0x1c, 0xac,
	0x41, 0x5f, 0x44, 0x6a, 0xb0, 0xac, 0x07, 0x37, 0x78, 0x3e, 0xf8, 0xce, 0xaf, 0xe0, 0x57, 0xaf,
	0x45, 0xa8, 0xde, 0x92, 0xc0, 0xe1, 0x34, 0x90, 0x6c, 0x08, 0x87, 0x1d, 0xce, 0xf3, 0xbd, 0xb1,
	0x53, 0x27, 0xab, 0xdd, 0xf9, 0xb3, 0xd1, 0x46, 0xdd, 0x49, 0x6f, 0xc3, 0xb9, 0x8f, 0x29, 0x74,
	0xd3, 0x7b, 0xb0, 0x0b, 0xec, 0x01, 0x8e, 0x3a, 0x9c, 0x6f, 0xd4, 0xc2, 0xec, 0xb5, 0xe3, 0xb6,
	0xce, 0xb6, 0x9b, 0x3e, 0xc2, 0x49, 0xce, 0xb4, 0x2f, 0x68, 0x1e, 0xfd, 0x87, 0x73, 0xb7, 0xf9,
	0xb1, 0xb4, 0x8c, 0xcf, 0xa5, 0x65, 0x7c, 0x2d, 0x2d, 0xe3, 0xed, 0xdb, 0x2a, 0x3c, 0x81, 0x73,
	0x93, 0xf9, 0x4d, 0x2a, 0xfa, 0x5d, 0x5d, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x86, 0x79,
	0xec, 0x96, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CoreMgmtClient is the client API for CoreMgmt service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoreMgmtClient interface {
	// 账号添加角色
	AddRoleForAccount(ctx context.Context, in *RoleForAccountRequest, opts ...grpc.CallOption) (*libresp.JsonResponse, error)
	// 角色添加业务元素
	AddBizElementForRole(ctx context.Context, in *BizElementForRoleRequest, opts ...grpc.CallOption) (*libresp.JsonResponse, error)
	// 角色添加业务元素组
	AddBizElementGroupForRole(ctx context.Context, in *BizElementForRoleRequest, opts ...grpc.CallOption) (*libresp.JsonResponse, error)
}

type coreMgmtClient struct {
	cc *grpc.ClientConn
}

func NewCoreMgmtClient(cc *grpc.ClientConn) CoreMgmtClient {
	return &coreMgmtClient{cc}
}

func (c *coreMgmtClient) AddRoleForAccount(ctx context.Context, in *RoleForAccountRequest, opts ...grpc.CallOption) (*libresp.JsonResponse, error) {
	out := new(libresp.JsonResponse)
	err := c.cc.Invoke(ctx, "/coremgmt.CoreMgmt/AddRoleForAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreMgmtClient) AddBizElementForRole(ctx context.Context, in *BizElementForRoleRequest, opts ...grpc.CallOption) (*libresp.JsonResponse, error) {
	out := new(libresp.JsonResponse)
	err := c.cc.Invoke(ctx, "/coremgmt.CoreMgmt/AddBizElementForRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreMgmtClient) AddBizElementGroupForRole(ctx context.Context, in *BizElementForRoleRequest, opts ...grpc.CallOption) (*libresp.JsonResponse, error) {
	out := new(libresp.JsonResponse)
	err := c.cc.Invoke(ctx, "/coremgmt.CoreMgmt/AddBizElementGroupForRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoreMgmtServer is the server API for CoreMgmt service.
type CoreMgmtServer interface {
	// 账号添加角色
	AddRoleForAccount(context.Context, *RoleForAccountRequest) (*libresp.JsonResponse, error)
	// 角色添加业务元素
	AddBizElementForRole(context.Context, *BizElementForRoleRequest) (*libresp.JsonResponse, error)
	// 角色添加业务元素组
	AddBizElementGroupForRole(context.Context, *BizElementForRoleRequest) (*libresp.JsonResponse, error)
}

// UnimplementedCoreMgmtServer can be embedded to have forward compatible implementations.
type UnimplementedCoreMgmtServer struct {
}

func (*UnimplementedCoreMgmtServer) AddRoleForAccount(ctx context.Context, req *RoleForAccountRequest) (*libresp.JsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRoleForAccount not implemented")
}
func (*UnimplementedCoreMgmtServer) AddBizElementForRole(ctx context.Context, req *BizElementForRoleRequest) (*libresp.JsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddBizElementForRole not implemented")
}
func (*UnimplementedCoreMgmtServer) AddBizElementGroupForRole(ctx context.Context, req *BizElementForRoleRequest) (*libresp.JsonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddBizElementGroupForRole not implemented")
}

func RegisterCoreMgmtServer(s *grpc.Server, srv CoreMgmtServer) {
	s.RegisterService(&_CoreMgmt_serviceDesc, srv)
}

func _CoreMgmt_AddRoleForAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleForAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreMgmtServer).AddRoleForAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coremgmt.CoreMgmt/AddRoleForAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreMgmtServer).AddRoleForAccount(ctx, req.(*RoleForAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreMgmt_AddBizElementForRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BizElementForRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreMgmtServer).AddBizElementForRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coremgmt.CoreMgmt/AddBizElementForRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreMgmtServer).AddBizElementForRole(ctx, req.(*BizElementForRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CoreMgmt_AddBizElementGroupForRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BizElementForRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreMgmtServer).AddBizElementGroupForRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coremgmt.CoreMgmt/AddBizElementGroupForRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreMgmtServer).AddBizElementGroupForRole(ctx, req.(*BizElementForRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CoreMgmt_serviceDesc = grpc.ServiceDesc{
	ServiceName: "coremgmt.CoreMgmt",
	HandlerType: (*CoreMgmtServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddRoleForAccount",
			Handler:    _CoreMgmt_AddRoleForAccount_Handler,
		},
		{
			MethodName: "AddBizElementForRole",
			Handler:    _CoreMgmt_AddBizElementForRole_Handler,
		},
		{
			MethodName: "AddBizElementGroupForRole",
			Handler:    _CoreMgmt_AddBizElementGroupForRole_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "core_mgmt.proto",
}

func (m *RoleForAccountRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoleForAccountRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RoleForAccountRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CreatedBy) > 0 {
		i -= len(m.CreatedBy)
		copy(dAtA[i:], m.CreatedBy)
		i = encodeVarintCoreMgmt(dAtA, i, uint64(len(m.CreatedBy)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.RoleIds) > 0 {
		for iNdEx := len(m.RoleIds) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.RoleIds[iNdEx])
			copy(dAtA[i:], m.RoleIds[iNdEx])
			i = encodeVarintCoreMgmt(dAtA, i, uint64(len(m.RoleIds[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.AccountId) > 0 {
		i -= len(m.AccountId)
		copy(dAtA[i:], m.AccountId)
		i = encodeVarintCoreMgmt(dAtA, i, uint64(len(m.AccountId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BizElementForRoleRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BizElementForRoleRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BizElementForRoleRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CreatedBy) > 0 {
		i -= len(m.CreatedBy)
		copy(dAtA[i:], m.CreatedBy)
		i = encodeVarintCoreMgmt(dAtA, i, uint64(len(m.CreatedBy)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.BizElementGrpIds) > 0 {
		for iNdEx := len(m.BizElementGrpIds) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.BizElementGrpIds[iNdEx])
			copy(dAtA[i:], m.BizElementGrpIds[iNdEx])
			i = encodeVarintCoreMgmt(dAtA, i, uint64(len(m.BizElementGrpIds[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.BizElementIds) > 0 {
		for iNdEx := len(m.BizElementIds) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.BizElementIds[iNdEx])
			copy(dAtA[i:], m.BizElementIds[iNdEx])
			i = encodeVarintCoreMgmt(dAtA, i, uint64(len(m.BizElementIds[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Type) > 0 {
		i -= len(m.Type)
		copy(dAtA[i:], m.Type)
		i = encodeVarintCoreMgmt(dAtA, i, uint64(len(m.Type)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.RoleId) > 0 {
		i -= len(m.RoleId)
		copy(dAtA[i:], m.RoleId)
		i = encodeVarintCoreMgmt(dAtA, i, uint64(len(m.RoleId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintCoreMgmt(dAtA []byte, offset int, v uint64) int {
	offset -= sovCoreMgmt(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *RoleForAccountRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AccountId)
	if l > 0 {
		n += 1 + l + sovCoreMgmt(uint64(l))
	}
	if len(m.RoleIds) > 0 {
		for _, s := range m.RoleIds {
			l = len(s)
			n += 1 + l + sovCoreMgmt(uint64(l))
		}
	}
	l = len(m.CreatedBy)
	if l > 0 {
		n += 1 + l + sovCoreMgmt(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BizElementForRoleRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RoleId)
	if l > 0 {
		n += 1 + l + sovCoreMgmt(uint64(l))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovCoreMgmt(uint64(l))
	}
	if len(m.BizElementIds) > 0 {
		for _, s := range m.BizElementIds {
			l = len(s)
			n += 1 + l + sovCoreMgmt(uint64(l))
		}
	}
	if len(m.BizElementGrpIds) > 0 {
		for _, s := range m.BizElementGrpIds {
			l = len(s)
			n += 1 + l + sovCoreMgmt(uint64(l))
		}
	}
	l = len(m.CreatedBy)
	if l > 0 {
		n += 1 + l + sovCoreMgmt(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovCoreMgmt(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCoreMgmt(x uint64) (n int) {
	return sovCoreMgmt(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *RoleForAccountRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCoreMgmt
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoleForAccountRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoleForAccountRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMgmt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMgmt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleIds = append(m.RoleIds, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMgmt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCoreMgmt(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BizElementForRoleRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCoreMgmt
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BizElementForRoleRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BizElementForRoleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMgmt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMgmt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BizElementIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMgmt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BizElementIds = append(m.BizElementIds, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BizElementGrpIds", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMgmt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BizElementGrpIds = append(m.BizElementGrpIds, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreMgmt
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCoreMgmt(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCoreMgmt
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCoreMgmt(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCoreMgmt
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCoreMgmt
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCoreMgmt
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCoreMgmt
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCoreMgmt
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCoreMgmt
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCoreMgmt        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCoreMgmt          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCoreMgmt = fmt.Errorf("proto: unexpected end of group")
)
