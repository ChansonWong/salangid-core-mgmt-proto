// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: core_role.proto

package coremgmt

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	libresp "github.com/pku-hit/libresp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateRoleRequest struct {
	//@inject_tag:validate:"required"
	AccountIdFk string `protobuf:"bytes,1,opt,name=accountIdFk,proto3" json:"accountIdFk,omitempty" validate:"required"`
	//@inject_tag:validate:"required"
	RoleCode string `protobuf:"bytes,2,opt,name=roleCode,proto3" json:"roleCode,omitempty" validate:"required"`
	//@inject_tag:validate:"required"
	RoleName             string   `protobuf:"bytes,3,opt,name=roleName,proto3" json:"roleName,omitempty" validate:"required"`
	Desc                 string   `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	CreatedBy            string   `protobuf:"bytes,5,opt,name=createdBy,proto3" json:"createdBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRoleRequest) Reset()         { *m = CreateRoleRequest{} }
func (m *CreateRoleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRoleRequest) ProtoMessage()    {}
func (*CreateRoleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ec5daa70dc8e71e, []int{0}
}
func (m *CreateRoleRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateRoleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateRoleRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateRoleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRoleRequest.Merge(m, src)
}
func (m *CreateRoleRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreateRoleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRoleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRoleRequest proto.InternalMessageInfo

func (m *CreateRoleRequest) GetAccountIdFk() string {
	if m != nil {
		return m.AccountIdFk
	}
	return ""
}

func (m *CreateRoleRequest) GetRoleCode() string {
	if m != nil {
		return m.RoleCode
	}
	return ""
}

func (m *CreateRoleRequest) GetRoleName() string {
	if m != nil {
		return m.RoleName
	}
	return ""
}

func (m *CreateRoleRequest) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *CreateRoleRequest) GetCreatedBy() string {
	if m != nil {
		return m.CreatedBy
	}
	return ""
}

type RoleResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountFkId          string   `protobuf:"bytes,2,opt,name=accountFkId,proto3" json:"accountFkId,omitempty"`
	RoleCode             string   `protobuf:"bytes,3,opt,name=roleCode,proto3" json:"roleCode,omitempty"`
	RoleName             string   `protobuf:"bytes,4,opt,name=roleName,proto3" json:"roleName,omitempty"`
	Desc                 string   `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleResponse) Reset()         { *m = RoleResponse{} }
func (m *RoleResponse) String() string { return proto.CompactTextString(m) }
func (*RoleResponse) ProtoMessage()    {}
func (*RoleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6ec5daa70dc8e71e, []int{1}
}
func (m *RoleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RoleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RoleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RoleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleResponse.Merge(m, src)
}
func (m *RoleResponse) XXX_Size() int {
	return m.Size()
}
func (m *RoleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RoleResponse proto.InternalMessageInfo

func (m *RoleResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RoleResponse) GetAccountFkId() string {
	if m != nil {
		return m.AccountFkId
	}
	return ""
}

func (m *RoleResponse) GetRoleCode() string {
	if m != nil {
		return m.RoleCode
	}
	return ""
}

func (m *RoleResponse) GetRoleName() string {
	if m != nil {
		return m.RoleName
	}
	return ""
}

func (m *RoleResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateRoleRequest)(nil), "coremgmt.CreateRoleRequest")
	proto.RegisterType((*RoleResponse)(nil), "coremgmt.RoleResponse")
}

func init() { proto.RegisterFile("core_role.proto", fileDescriptor_6ec5daa70dc8e71e) }

var fileDescriptor_6ec5daa70dc8e71e = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0xce, 0x2f, 0x4a,
	0x8d, 0x2f, 0xca, 0xcf, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x09, 0xe4,
	0xa6, 0xe7, 0x96, 0x48, 0x29, 0xe4, 0x64, 0x26, 0x15, 0xa5, 0x16, 0x17, 0xc4, 0x83, 0x25, 0xf4,
	0x73, 0x8b, 0xd3, 0x75, 0x41, 0xdc, 0xfc, 0xbc, 0x62, 0xa8, 0x5a, 0xa5, 0xf9, 0x8c, 0x5c, 0x82,
	0xce, 0x45, 0xa9, 0x89, 0x25, 0xa9, 0x41, 0xf9, 0x39, 0xa9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5,
	0x25, 0x42, 0x0a, 0x5c, 0xdc, 0x89, 0xc9, 0xc9, 0xf9, 0xa5, 0x79, 0x25, 0x9e, 0x29, 0x6e, 0xd9,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0xc8, 0x42, 0x42, 0x52, 0x5c, 0x1c, 0x20, 0x1b, 0x9d,
	0xf3, 0x53, 0x52, 0x25, 0x98, 0xc0, 0xd2, 0x70, 0x3e, 0x4c, 0xce, 0x2f, 0x31, 0x37, 0x55, 0x82,
	0x19, 0x21, 0x07, 0xe2, 0x0b, 0x09, 0x71, 0xb1, 0xa4, 0xa4, 0x16, 0x27, 0x4b, 0xb0, 0x80, 0xc5,
	0xc1, 0x6c, 0x21, 0x19, 0x2e, 0xce, 0x64, 0xb0, 0x13, 0x52, 0x9c, 0x2a, 0x25, 0x58, 0xc1, 0x12,
	0x08, 0x01, 0xa5, 0x1e, 0x46, 0x2e, 0x1e, 0x88, 0xdb, 0x20, 0x0e, 0x17, 0xe2, 0xe3, 0x62, 0xca,
	0x4c, 0x81, 0xba, 0x89, 0x29, 0x33, 0x05, 0xc9, 0xb1, 0x6e, 0xd9, 0x9e, 0x29, 0x50, 0xd7, 0x20,
	0x0b, 0xa1, 0x38, 0x96, 0x19, 0x8f, 0x63, 0x59, 0x70, 0x38, 0x96, 0x15, 0xe1, 0x58, 0xa3, 0x40,
	0x2e, 0x0e, 0xe7, 0xfc, 0x22, 0x70, 0x68, 0x09, 0xb9, 0x72, 0x71, 0x21, 0xc2, 0x4e, 0x48, 0x5a,
	0x0f, 0x16, 0xee, 0x7a, 0x18, 0x21, 0x2a, 0x25, 0xa1, 0x07, 0x8d, 0x0a, 0x3d, 0xf7, 0xd4, 0xbc,
	0xd4, 0xa2, 0xcc, 0x64, 0x98, 0x77, 0x94, 0x18, 0x9c, 0x64, 0x4e, 0x3c, 0x92, 0x63, 0xbc, 0xf0,
	0x48, 0x8e, 0xf1, 0xc1, 0x23, 0x39, 0xc6, 0x19, 0x8f, 0xe5, 0x18, 0xa2, 0xb8, 0xf4, 0xac, 0x61,
	0x66, 0x25, 0xb1, 0x81, 0x23, 0xca, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xd7, 0xf1, 0x88, 0x8f,
	0xe7, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CoreRoleClient is the client API for CoreRole service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoreRoleClient interface {
	// 创建角色
	CreateRole(ctx context.Context, in *CreateRoleRequest, opts ...grpc.CallOption) (*libresp.GenericResponse, error)
}

type coreRoleClient struct {
	cc *grpc.ClientConn
}

func NewCoreRoleClient(cc *grpc.ClientConn) CoreRoleClient {
	return &coreRoleClient{cc}
}

func (c *coreRoleClient) CreateRole(ctx context.Context, in *CreateRoleRequest, opts ...grpc.CallOption) (*libresp.GenericResponse, error) {
	out := new(libresp.GenericResponse)
	err := c.cc.Invoke(ctx, "/coremgmt.CoreRole/CreateRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoreRoleServer is the server API for CoreRole service.
type CoreRoleServer interface {
	// 创建角色
	CreateRole(context.Context, *CreateRoleRequest) (*libresp.GenericResponse, error)
}

// UnimplementedCoreRoleServer can be embedded to have forward compatible implementations.
type UnimplementedCoreRoleServer struct {
}

func (*UnimplementedCoreRoleServer) CreateRole(ctx context.Context, req *CreateRoleRequest) (*libresp.GenericResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRole not implemented")
}

func RegisterCoreRoleServer(s *grpc.Server, srv CoreRoleServer) {
	s.RegisterService(&_CoreRole_serviceDesc, srv)
}

func _CoreRole_CreateRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRoleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreRoleServer).CreateRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coremgmt.CoreRole/CreateRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreRoleServer).CreateRole(ctx, req.(*CreateRoleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CoreRole_serviceDesc = grpc.ServiceDesc{
	ServiceName: "coremgmt.CoreRole",
	HandlerType: (*CoreRoleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRole",
			Handler:    _CoreRole_CreateRole_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "core_role.proto",
}

func (m *CreateRoleRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateRoleRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateRoleRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CreatedBy) > 0 {
		i -= len(m.CreatedBy)
		copy(dAtA[i:], m.CreatedBy)
		i = encodeVarintCoreRole(dAtA, i, uint64(len(m.CreatedBy)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintCoreRole(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RoleName) > 0 {
		i -= len(m.RoleName)
		copy(dAtA[i:], m.RoleName)
		i = encodeVarintCoreRole(dAtA, i, uint64(len(m.RoleName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.RoleCode) > 0 {
		i -= len(m.RoleCode)
		copy(dAtA[i:], m.RoleCode)
		i = encodeVarintCoreRole(dAtA, i, uint64(len(m.RoleCode)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AccountIdFk) > 0 {
		i -= len(m.AccountIdFk)
		copy(dAtA[i:], m.AccountIdFk)
		i = encodeVarintCoreRole(dAtA, i, uint64(len(m.AccountIdFk)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RoleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RoleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RoleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintCoreRole(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.RoleName) > 0 {
		i -= len(m.RoleName)
		copy(dAtA[i:], m.RoleName)
		i = encodeVarintCoreRole(dAtA, i, uint64(len(m.RoleName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RoleCode) > 0 {
		i -= len(m.RoleCode)
		copy(dAtA[i:], m.RoleCode)
		i = encodeVarintCoreRole(dAtA, i, uint64(len(m.RoleCode)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.AccountFkId) > 0 {
		i -= len(m.AccountFkId)
		copy(dAtA[i:], m.AccountFkId)
		i = encodeVarintCoreRole(dAtA, i, uint64(len(m.AccountFkId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintCoreRole(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintCoreRole(dAtA []byte, offset int, v uint64) int {
	offset -= sovCoreRole(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *CreateRoleRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AccountIdFk)
	if l > 0 {
		n += 1 + l + sovCoreRole(uint64(l))
	}
	l = len(m.RoleCode)
	if l > 0 {
		n += 1 + l + sovCoreRole(uint64(l))
	}
	l = len(m.RoleName)
	if l > 0 {
		n += 1 + l + sovCoreRole(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovCoreRole(uint64(l))
	}
	l = len(m.CreatedBy)
	if l > 0 {
		n += 1 + l + sovCoreRole(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RoleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovCoreRole(uint64(l))
	}
	l = len(m.AccountFkId)
	if l > 0 {
		n += 1 + l + sovCoreRole(uint64(l))
	}
	l = len(m.RoleCode)
	if l > 0 {
		n += 1 + l + sovCoreRole(uint64(l))
	}
	l = len(m.RoleName)
	if l > 0 {
		n += 1 + l + sovCoreRole(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovCoreRole(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovCoreRole(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCoreRole(x uint64) (n int) {
	return sovCoreRole(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CreateRoleRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCoreRole
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateRoleRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateRoleRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountIdFk", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountIdFk = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedBy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedBy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCoreRole(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCoreRole
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCoreRole
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RoleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCoreRole
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RoleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RoleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountFkId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccountFkId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoleName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RoleName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCoreRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCoreRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCoreRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCoreRole(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCoreRole
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCoreRole
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCoreRole(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCoreRole
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCoreRole
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCoreRole
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCoreRole
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupCoreRole
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthCoreRole
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthCoreRole        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCoreRole          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupCoreRole = fmt.Errorf("proto: unexpected end of group")
)
